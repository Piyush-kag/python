Step 1: Launch an EC2 Instance

Log in to the AWS Management Console and navigate to the EC2 Dashboard.

Click "Launch Instance".

Choose an Amazon Machine Image (AMI): Select an Ubuntu Server AMI.

Choose an Instance Type: Select a t2.micro instance (free tier eligible).

Configure Instance Details: Default settings are usually fine.

Add Storage: Default settings are usually fine.

Add Tags: Optional.

Configure Security Group:
 - Add a rule to allow HTTP traffic (port 80).
 - Add a rule to allow SSH traffic (port 22).

Review and Launch: Launch the instance and download the key pair (.pem file).

Step 2: Connect to Your EC2 Instance
1. Open your terminal.
2. Change the permissions of your key pair file -> chmod 400 your-key-pair.pem
3. Connect to your instance -> ssh -i "your-key-pair.pem" ubuntu@your-ec2-instance-public-dns

Step 3: Set Up Your Environment
Update the package list and install necessary packages ->
 - sudo apt-get update
 - sudo apt-get install python3-pip python3-venv nginx git

Clone your project repository:

git clone your_repository_url
cd your_project_directory

Create and activate a virtual environment:
python3 -m venv venv
source venv/bin/activate

Install dependencies:
pip install -r requirements.txt

Step 4: Set Up Gunicorn
Install Gunicorn:

pip install gunicorn
Create a Gunicorn service file to run your application:

sudo nano /etc/systemd/system/your_project.service
Add the following content (adjust paths and app module accordingly):

[Unit]
Description=Gunicorn instance to serve your_project
After=network.target

[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/your_project_directory
Environment="PATH=/home/ubuntu/your_project_directory/venv/bin"
ExecStart=/home/ubuntu/your_project_directory/venv/bin/gunicorn --workers 3 --bind unix:your_project.sock -m 007 wsgi:app

[Install]
WantedBy=multi-user.target

Start and enable the Gunicorn service:

sudo systemctl start your_project
sudo systemctl enable your_project

Step 5: Configure Nginx
Create an Nginx configuration file:
sudo nano /etc/nginx/sites-available/your_project

Enable the Nginx configuration and restart the service:
sudo ln -s /etc/nginx/sites-available/your_project /etc/nginx/sites-enabled
sudo systemctl restart nginx

Step 6: Set Up Firewall Rules
Configure the firewall to allow HTTP traffic (if using ufw):
sudo ufw allow 'Nginx Full'
sudo ufw enable

Step 7: Test Your Application
Visit your EC2 instanceâ€™s public IP or domain in a web browser to see if your application is running.
Check Gunicorn and Nginx logs if you encounter issues:

Gunicorn logs (if configured):
sudo journalctl -u your_projec

Nginx logs:

sudo tail -f /var/log/nginx/error.log
sudo tail -f /var/log/nginx/access.log

Summary:
Launch an EC2 instance on AWS.
Connect to your instance via SSH.
Set up your Python environment and install dependencies.
Configure Gunicorn to serve your application.
Set up Nginx as a reverse proxy to forward requests to Gunicorn.
Adjust firewall rules and test your application.

This manual approach gives you more control over the deployment process and is useful for learning and troubleshooting.